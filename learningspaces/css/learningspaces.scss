// ========== Global Mixins & Variables
@import "utilities";

/* =========== ?? ============ */

.highlighted{
	background-color:aliceblue;
}

.Class_filter{
	border: 1px solid #e5e5e5;
	background-color:#ededed;
}
.infoWindow{
	border: 1px solid #fff;
	background-color:#000;	
}

.showModal{
	cursor: pointer;
}

/* ========== Page layout ========= */

#spaces-listing h1, #spaces-filters h2, #spaces-map h2 {
  @include hidden-visually;
}

#spaces-listing, #spaces-filters, #spaces-map {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  width: 100%;
}

// Wrapping several of these widths in #main-content so that they don't affect the measurements for when the filters are in a popup
#main-content {

  /* By default only show the list of "results". Filters and map get hidden behind other "tabs" */
  #spaces-filters, #spaces-map {
    display: none;
  }

  #map, #map-wrapper {
    width: 100%;
    height: 100%;
  }

  #spaces-map {
    #map-wrapper {
      position: fixed;
      right: 0;
      z-index: 2;
    }
  }

  #spaces-listing {
    padding: 10px;
  }

  /* If the screen is wider than 600px, show the map next to the list of results */
  @include mediaMin (600px) {
    #spaces-listing, #spaces-filters, #spaces-map {
      padding: 20px 0 0 20px;
    }
    #spaces-map {
      padding-top: 0;
      display: block;
      width: 45%;
    }
    #spaces-listing {
      width: 55%;
    }
  }
  /* Small adjustment at 750px so that the map isn't taking up too much space (as if the map had a min-width before, and now the min-width is getting transferred to the result list) */
  @include mediaMin (750px) {
    #spaces-map {
      width: 40%;
    }
    #spaces-listing {
      width: 60%;
    }
  }
  @mixin third-each {
    #spaces-listing, #spaces-filters, #spaces-map {
      width: 33.33333333%;
    }
    #spaces-listing {
      margin-left: 33.33333333%;
      margin-right: -66.66666666%;
    }
    #spaces-filters {
      display: block;
      margin-right: -33.33333333%;
    }
    #spaces-map {
      margin-left: 66.66666666%;
      margin-right: -100%;
    }
  }
  /* At 900px wide, show the filters in addition to the list and map. Make each 1/3 wide. */
  @include mediaMin (900px) {
    @include third-each;
  }
  /* Small adjustment at 1000px as a sort of min-width on the result list */
  @include mediaMin (1000px) {
    #spaces-filters, #spaces-map {
      width: 30%;
    }
    #spaces-listing {
      width: 40%;
      margin-left: 30%;
      margin-right: -70%;
    }
    #spaces-filters {
      margin-right: -30%;
    }
    #spaces-map {
      margin-left: 70%;
    }
  }
  /* At 1300px is where the filters go two-column, but still want a sort of min-width on result list */
  @include mediaMin (1300px) {
    #spaces-filters {
      width: 33%;
      margin-right: -33%;
    }
    #spaces-listing {
      width: 40%;
      margin-left: 33%;
      margin-right: -73%;
    }
    #spaces-map {
      width: 27%;
      margin-left: 73%;
    }
  }
  /* Back to 1/3 for each column on the assumption there's now enough room for everything */
  @include mediaMin (1400px) {
    @include third-each;    
  }

}

/* ========== Space/room teasers ========== */

#rooms {
  min-height: 50vh;
  transition: all .2s;
  position: relative;
  z-index: 1;
  overflow: hidden;
  &.processing-results {
    &:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 100%;
      background-color: rgba(255,255,255,.8);
      z-index: 2;
    }
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: -100%;
      height: 100%;
      width: 200%;
      background-image: linear-gradient(to right, rgba(255,255,255,0), rgba($gwlightblue,.4) 45%, rgba($gwlightblue,.6) 50%, rgba(#fff,0) 51%);
      animation: loadingRooms 1.5s infinite;
      z-index: 3;
    }
  }
}

@keyframes loadingRooms {
  0% {
    left: -100%;
  } 100% {
    left: 100%;
  }
}

$defaultHeight: 150;
$aspectRatio: 3/2;

@mixin teaser-image-full-width {
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  height: #{$defaultHeight}px;
  min-height: #{$defaultHeight}px;
  max-height: #{$defaultHeight}px;
}

@mixin teaser-image-full-height {
  width: #{$defaultHeight * $aspectRatio}px;
  min-width: #{$defaultHeight * $aspectRatio}px;
  max-width: #{$defaultHeight * $aspectRatio}px;
  height: inherit;
  max-height: inherit;
  min-height: inherit;
}

.roomTeaser {

  border: 1px solid #ddd;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  margin-bottom: 10px;
  transition: all .2s;
  cursor: pointer;
  min-height: #{$defaultHeight}px;
  &:hover, &:focus {
    transition: all .2s;
    background-color: rgba($gwlightblue,.1);
  }
  .teaserImage {
    @include teaser-image-full-width;
  }
  @include mediaMin(475px) {
    flex-direction: row;
    .teaserImage {
      @include teaser-image-full-height;
    }
  }
  @include mediaMin(600px) {
    flex-direction: column;
    .teaserImage {
      @include teaser-image-full-width;
    }
  }
  @include mediaMin(750px) {
    flex-direction: row;
    .teaserImage {
      @include teaser-image-full-height;
    }
  }
  @include mediaMin(900px) {
    flex-direction: column;
    .teaserImage {
      @include teaser-image-full-width;
    }
  }
  @include mediaMin(1050px) {
    flex-direction: row;
    .teaserImage {
      @include teaser-image-full-height;
    }
  }

  .teaserImage {
    flex: 1;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 50% 50%;
    position: relative;
    overflow: hidden; /* so that the focus outline doesn't stretch way out to the side due to the "hidden" image and position:relative */
    img {
      @include hidden-visually;
    }
  }
  &:hover .teaserImage:after, &:focus .teaserImage:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-image: linear-gradient(rgba($gwdarkblue,.2), rgba($gwdarkblue,.7));
  }

  .teaserContents {
    flex: 1;
    padding: .5em .75em;
    display: flex;
    justify-content: space-between;
    flex-direction: column;

    .teaserTitle {
      margin-bottom: 1em;
      h2 {
        font-size: 1.15em;
        font-family: "AvenirLTStd-Roman",Helvetica,Arial,sans-serif;
        margin: 0 0 .15em;
        .teaserRoom {
          font-size: 1.25em;
          color: $gwlightblue;
          display: block;
          margin: .2em 0 .5em;
        }
      }
      .teaserTitleDetails {
        color: #777;
        text-transform: uppercase;
        font-size: .825em;
      }
    }
    .teaserDetails {
      & > div {
        clear: right;
      }
      text-align: right;
      .teaserSpaceType {
        display: inline-block;
        &:after {
          content: " |";
        }
      }
      .teaserReservable {
        display: inline-block;
        float: right;
        padding-left: calc(20px + .3em);
        background-repeat: no-repeat;
        background-image: url(../images/calendar-icon.svg);
        background-size: 16px 16px;
        background-position: .3em 3px;
      }
      .teaserSeating {
        display: inline-block;
        padding-left: calc(20px + .3em);
        background-repeat: no-repeat;
        background-image: url(../images/chair-icon.svg);
        background-size: 16px 16px;
        background-position: .3em 3px;
      }
    }

  }

}

#noRoom {
  font-style: italic;
}

#results_count {
  margin-bottom: 1em;
}

#load {
  margin: 1em auto;
  display: table;
}

/* ========== Room/space full information =========== */

#room {
  h2 {
    margin-top: 0;
  }
  .fullContent {
    p:first-of-type {
      margin-top: .75em;
    }
    & > div {
      margin: 1em 0;
      padding-left: 1em;
      .information-label {
        margin-left: -1em;
      }
      .information-contents {
        display: inline;
      }
      @include mediaMin(800px) {
        display: table-row;
        width: 100%;
        padding-left: 10.25em;
        box-sizing: border-box;
        .information-label {
          display: table-cell;
          width: 10em;
          padding-left: -10.25em;
          vertical-align: top;
          padding-bottom: 1em;
        }
        .information-contents {
          display: block;
          padding-bottom: 1em;
          /* Hours and interior location description have HTML */
          & > p {
            margin: .5em 0;
          }
          & > p:first-of-type {
            margin: 0;
          }
          & > p:last-child {
            margin-bottom: 0;
          }
        }
      }
    }
    .reservation-information {
      .reg-button {
        vertical-align: -.25em;
        a {
          padding: .5em;
        }
      }
    }
    .report-problem, .single-space-map-link {
      text-align: right;
      @include mediaMin(800px) {
        float: right;
        margin-left: 2em;
        margin-top: 0;
      }
    }
    .seating-icon {
      width: 16px;
      height: 16px;
      vertical-align: middle;
      opacity: .75;
    }
    .filter-icon {
      width: 20px;
      height: 20px;
      opacity: .75;
    }
    #single-space-map {
      display: block;
      height: 250px;
      width: 100%;
      border: 1px solid #ddd;
    }
  }
}

/* Carousel overrides */
.slick {
  margin: 1em -10px;
  .slick-prev, .slick-next {
    width: 30px;
    height: 30px;
    &:before {
      font-size: 30px;
      color: $gwlightblue;
      text-shadow: 2px 0 2px #fff, -2px 0 2px #fff, 0 2px 2px #fff, 0 -2px 2px #fff, 1px 1px 2px #fff, -1px -1px 2px #fff, 1px -1px 2px #fff, -1px 1px 2px #fff;
    }
    &.slick-disabled:before {
      text-shadow: none;
      color: #fff;
    }
    @include mediaMin(400px) {
      width: 50px;
      height: 50px;
      &:before {
        font-size: 50px;
      }
    }
  }
  .slick-prev {
    left: 20px;
    z-index: 2;
  }
  .slick-next {
    right: 20px;
  }
  .slick-slide {
    margin: 0 10px;
    box-sizing: border-box;
  }
  &.clickable-images .slick-slide, &.clickable-images .slick-slide a {
    cursor: pointer;
  }
  &.unseen-images .slick-slide, &.unseen-images .slick-slide a {
    cursor: grab;
    &:active {
      cursor: grabbing;
    }
  }
  .off-screen {
    @include hidden-visually;
  }
}
.slick-lightbox {
  .slick-prev, .slick-next, .slick-lightbox-close {
    width: 30px;
    height: 30px;
    z-index: 2;
    &:before {
      font-size: 30px;
    }
    @include mediaMin(400px) {
      width: 50px;
      height: 50px;
      &:before {
        font-size: 50px;
      }
    }
  }
}

/* ========== infoWindows on Google Map ========== */

.infoWindowRooms {

  h3 {
    font-size: 1.2em;
    margin: .25em 0 .5em;
    max-width: 175px;
  }
  @include mediaMin(1200px) {
    max-width: 225px;
  }

  .infoWindowRoomsList {
    overflow-y: auto;
    max-height: 175px;
    width: 175px;
    @include mediaMin(1200px) {
      width: 225px;
    }

    .infoWindowRoom {
      padding: .75em .25em;
      margin-right: 1em;
      box-sizing: border-box;
      cursor: pointer;
      font-size: 1em;
      &:not(:first-child) {
        border-top: 1px solid #ccc;
      }
      &:hover {
        background-color: rgba($gwlightblue,.1);
      }
    }

  }

}

/* ========== "Trigger" buttons / tabs that show different sections on smaller screens =========== */

#triggers {

  margin: 0;
  list-style-type: none;
  display: flex;
  padding: 16px 16px 0;
  border-bottom: 1px solid #bbb;
  background-color: #fff;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 2;
  left: 0;

  @include mediaMin(600px) {
    padding-top: 0;
    position: relative;
    left: auto;
    z-index: 0;
    top: auto;
    margin-bottom: 20px;

    #map-trigger {
      display: none;
    }

  }

  li {
    margin: 0;
    padding: 1em .25em;
    list-style-type: none;
    cursor: pointer;
    color: $gwlightblue;
    white-space: nowrap;
    text-align: center;
    border: 1px solid #bbb;
    border-width: 1px 1px 0 0;
    background-color: #eee;
    width: 33.3333333%;
    &:first-child {
      border-left-width: 1px;
    }
    @include mediaMin(600px) {
      width: auto;
      padding: 1em 2em;
    }
    &.selected {
      background-color: #fff;
      border-bottom: 1px solid #fff;
      margin-bottom: -1px;
    }
    .fa {
      font-size: 1.5em;
      vertical-align: middle;
    }
  }

  @include mediaMin(900px) {
    display: none;
  }

}

/* ========== jQuery UI dialog overrides ========== */

.ui-widget-overlay {
  background-color: #000;
  opacity: .7;
  filter: Alpha(Opacity=70);
}

.ui-widget {
  font-family: inherit;
  input, select, textarea, button {
    font-family: inherit;
  }
}

.ui-dialog {
  max-width: 1100px;
}

[aria-describedby=room] .ui-dialog-title {
  color: $gwdarkblue;
  font-size: 1.75em;
}

/* ========== Filter boxes ========== */

#spaces-filters {
.filter_division {
  margin-bottom: .5em;
  border: 1px solid #ccc;
  border-radius: 5px;

  .filter-toggle {
    float: right;
    margin: 0 .5em 0 1em;
  }

  h3 {
    font-size: 1em;
    font-weight: bold;
    background-color: rgba($gwdarkblue,.05);
    padding: .5em;
    border-bottom: 1px dotted #ccc;
    margin: 0;
    cursor: pointer;
  }

  & > div {
    padding:  .7em .7em 0;
  }
  &.collapsed > div {
    display: none;
  }

  ul, li {
    margin: 0;
    padding: 0;
    list-style-type: none;
    width: 100%;
  }

  ul {
    display: flex;
    flex-wrap: wrap;
  }

  li {
    margin: 0 0 .7em;
    @include mediaMin(1300px) {
      width: auto;
      min-width: 50%;
    }
    @include mediaMin(500px) {
      .ui-dialog & {
        width: auto;
        min-width: 50%;
      }
    }
    @at-root #spaces-filters #building.filter_division li {
      min-width: 100%;
    }
  }

  label { // overriding bootstrap
    margin: 0;
    font-weight: normal;
    color: $gwlightblue;
  }

}
}

#campus {
  margin: .5em 0 1em;
  h2 {
    @include hidden-visually;
  }
  ul, li {
    margin: 0;
    padding: 0;
    list-style-type: none;
    display: flex;
    flex-wrap: wrap;
  }
  li {
    margin-right: .5em;
    margin-bottom: .25em;
    label {
      margin: 0;
      font-weight: normal;
      color: $gwlightblue;
    }
  }
}

/* Just because it looks so thick by default and we don't have FontAwesome Pro */
.fa-external-link-alt {
  opacity: .8;
}

/* =========== Sliders/switches to replace checkboxes =========== */

.filter_division {

  $inputSize: 20;

  li {
    padding-left: calc(#{$inputSize * 1.5}px + .5em);
  }

  input {
    @include hidden-visually;
  }

  label {

    position: relative;
    cursor: pointer;
    display: inline;
    margin-left: calc(-#{$inputSize * 1.5}px - .5em);
    padding-left: calc(#{$inputSize * 1.5}px + .5em);
    padding-right: .5em;

    $uptohere: &;
    @at-root #campus#{$uptohere}, .intersection#{$uptohere} {
      padding-left: calc(#{$inputSize}px + .5em);
    }

    &:before {
      content: "";
      display: inline-block;
      height: #{$inputSize}px;
      width: #{$inputSize * 1.5}px;
      background-color: #ccc;
      border-radius: #{$inputSize / 2}px;
      position: absolute;
      left: 0;
      top: 0;
      transition: all .2s;

      $uptohere: &;
      @at-root .intersection#{$uptohere} {
        border-radius: 0;
        width: #{$inputSize}px;
      }
      @at-root #campus#{$uptohere} {
        width: #{$inputSize}px;
      }

    }

    &:after {
      content: "";
      display: inline-block;
      height: #{$inputSize - 4}px;
      width: #{$inputSize - 4}px;
      background-color: #fff;
      border-radius: #{($inputSize - 4) / 2}px;
      position: absolute;
      top: 2px;
      left: 2px;
      transition: all .2s;

      $uptohere: &;
      @at-root .intersection#{$uptohere} {
        border-radius: 0;
      }

    }

    img {
      opacity: .5;
      width: 20px;
      height: 20px;
    }

  }

  input:checked + label {
    &:before {
      background-color: $gwlightblue;
      transition: all .2s;
    }
    &:after {
      left: #{$inputSize * .5 + 2}px;
      transition: all .2s;

      $uptohere: &;
      @at-root #campus#{$uptohere} {
        left: 2px;
        box-shadow: inset 0 0 0 4px #fff;
        background-color: $gwlightblue;
      }
      @at-root .intersection#{$uptohere} {
        left: 6px;
        border: 0 solid #fff;
        border-width: 0 3px 3px 0;
        width: #{$inputSize * .4}px;
        height: #{$inputSize * .6}px;
        transform: rotate(45deg);
        background-color: transparent;
      }

    }

  }

  /* :not(:hover) here to avoid the weirdness of getting the outline when clicking instead of tabbing (though realizing it will be there as soon as hovered away from) */
  input:focus + label:not(:hover) {
    outline: 1px dotted;
  }

  .filter-explanation {
    padding-left: 0;
    margin-bottom: .75em;
    min-width: 100%;
    .filter-explanation-tooltip-trigger {
      margin-left: .5em;
      color: $gwlightblue;
      cursor: pointer;
      position: relative;
      &:hover:before, &:focus:before {
        content: attr(title);
        background-color: #fff;
        color: #333;
        width: 200px;
        position: absolute;
        z-index: 103;
        bottom: calc(100% + .5em);
        right: -100px;
        .ui-dialog & {
          right: 0;
        }
        padding: .75em;
        border: 1px solid #ddd;
        box-shadow: 0 0 5px #ccc;
      }
    }
  }

}
